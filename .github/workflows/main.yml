name: build

on:
  push:
    branches:
      - 'xxf098/develop'
      - 'xxf098/master'
  watch:
    types: started

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Data
      uses: actions/cache@v1
      env:
        ndk: android-ndk-r12b
        sdk-tools: 4333796
        scala-version: scala-2.11.8
      with:
        path: ~/.android-cache
        key: ${{ runner.os }}-android-${{ env.ndk-version }}-${{ env.sdk-tools }}-${{ env.scala-version }}
        restore-keys: |
          ${{ runner.os }}-android-${{ env.ndk-version }}-${{ env.sdk-tools }}        
    - name: Setup Scala
      run: |
        # sudo apt-get remove scala-library scala
        mkdir -p ~/.android-cache
        sudo /bin/sh -c 'if [ ! -f ~/.android-cache/scala-2.11.8.deb ]; then sudo wget -O ~/.android-cache/scala-2.11.8.deb www.scala-lang.org/files/archive/scala-2.11.8.deb; fi'
        sudo dpkg -i ~/.android-cache/scala-2.11.8.deb
    - name: Setup SBT
      run: |
         echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
         sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
         sudo apt-get update
         sudo apt-get install sbt
    - name: Setup Package
      run: |
        sudo apt-get --quiet install --yes wget tar unzip gcc-multilib g++-multilib libstdc++6 libgcc1 zlib1g libncurses5  
    - name: Cache SBT ivy cache
      uses: actions/cache@v1
      with:
        path: ~/.ivy2/cache
        key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
    - name: Cache SBT
      uses: actions/cache@v1
      with:
        path: ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
    - name: init Application.mk
      run: |
        echo -e "APP_ABI      			:= armeabi-v7a x86\nAPP_PLATFORM 			:= android-16\nAPP_STL      			:= stlport_static\nNDK_TOOLCHAIN_VERSION 	:= clang\n" > './src/main/jni/Application.mk'
    - name: Build apk
      run: |
        ./travis-ci/setup.sh
    - name: Upload APK
      uses: actions/upload-artifact@v1
      with:
        name: shadowsocksr-v2ray-build-release
        path: target/android/output/shadowsocksr-v2ray-release.apk
    - name: Check Build
      run: |
        ls -thls ~/.android-cache
        ls -thla ./target/android/output/
        echo test, and deploy your project.
